<document>
    <properties>
        <author email="rgettman@users.sourceforge.net">Randy Gettman</author>
        <title>Cell Listeners</title>
    </properties>
    <body>
        <section name="Cell Listeners">
            <p>For finer control over the content and formatting of the resultant spreadsheet
            cells, JETT allows the user to create <code>CellListener</code> objects that are
            notified every time a cell's content has been evaluated, whether it contains static
            content, Expressions, or bodiless tags whose content is evaluated.  Cells with tag text
            have their tag text removed before processing.  Any object that implements the
            <code>CellListener</code> interface may be registered with the
            <code>ExcelTransformer</code> prior to transformation.  The <code>CellListener</code>
            interface contains a single method:</p>
            <source>
public void cellProcessed(CellEvent event);
            </source>
            <p>Register a CellListener with the ExcelTransformer:</p>
            <source>
transformer.addCellListener(new MyCellListener());
            </source>
            <p>When a Cell is processed, JETT generates a <code>CellEvent</code> and notifies all
            registered CellListeners.  A CellListener can retrieve context information by
            retrieving properties of the CellEvent.</p>
            <source>
Cell cell = event.getCell();
Map&lt;String, Object&gt; beans = event.getBeans();
Object oldValue = event.getOldValue();
Object newValue = event.getNewValue();
            </source>
            <p>The <code>Cell</code> is a reference to the POI Cell object representing the actual
            cell in the spreadsheet.  The <code>Map</code> object is a reference to the beans map.
            It may have extra beans added, if the Cell is in the middle of a "forEach" tag, or for
            that matter, any tag that adds values to the beans map.  The old value is the template
            value obtained from the template spreadsheet.  The new value is the resultant value
            after the evaluation of any Expressions.  Any CellListener can use the Cell object to
            gain access to the POI Row object, then the POI Sheet object, and even the POI Workbook
            object.</p>
        </section>
        <section name="Example">
            <p>A CellListener can be created to shade different rows alternately different colors
            within a result set.  If a <a href="../tags/forEach.html">forEach tag</a> defines the
            optional "indexVar" attribute to be "index", then an Integer bean "index" will be
            available in the beans map for the CellListener to observe.</p>
            <p>This CellListener will shade alternating rows light gray.  It uses POI objects and
            functionality to change the color of the alternating rows.  It will change the color of
            alternating rows for ANY collection processing that defines its "indexVar" to be
            "index".</p>
            <source>
public void cellProcessed(CellEvent event)
{
   Map&lt;String, Object&gt; beans = event.getBeans();
   Object index = beans.get(“index”);
   if (index != null &amp;&amp; ((Number) index).intValue() % 2 == 0)
   {
      Cell cell = event.getCell();
      CellStyle style = cell.getSheet().getWorkbook().createCellStyle();
      style.cloneStyleFrom(cell.getCellStyle());
      style.setFillForegroundColor(IndexedColors.GREY_25_PERCENT.
         getIndex());
      style.setFillPattern(CellStyle.SOLID_FOREGROUND);
      cell.setCellStyle(style);
   }
}
            </source>
            <p>This example uses a <a href="../tags/forEach.html">forEach tag</a> to process the
            "employees" collection.</p>
            <table style="width: 750px;">
                <tr>
                    <td class="bold" style="width: 250px;">Employee</td>
                    <td class="bold" style="width: 150px;">Salary</td>
                    <td class="bold" style="width: 350px;">Manager</td>
                </tr>
                <tr>
                    <td style="width: 250px;">&lt;jt:forEach items="${employees}" var="employee" indexVar="index"&gt;<span class="bold">${index + 1}.</span> ${employee.lastName}, ${employee.firstName}</td>
                    <td style="width: 150px;">${employee.salary}</td>
                    <td style="width: 350px;">&lt;jt:if test="${employee.getManager() != null}" then="${employee.manager.lastName}, ${employee.manager.firstName}"/&gt;&lt;/jt:forEach&gt;</td>
                </tr>
            </table>
            <p>...gets transformed into...</p>
            <table style="width: 750px;">
                <tr>
                    <td class="bold" style="width: 250px;">Employee</td>
                    <td class="bold" style="width: 150px;">Salary</td>
                    <td class="bold" style="width: 350px;">Manager</td>
                </tr>
                <tr>
                    <td class="lightGray" style="width: 250px;"><span class="bold">1.</span> Stack, Robert</td>
                    <td class="lightGray" style="width: 150px;">$1000.00</td>
                    <td class="lightGray" style="width: 350px;">&nbsp;</td>
                </tr>
                <tr>
                    <td style="width: 250px;"><span class="bold">2.</span> Queue, Suzie</td>
                    <td style="width: 150px;">$900.00</td>
                    <td style="width: 350px;">Stack, Robert</td>
                </tr>
                <tr>
                    <td class="lightGray" style="width: 250px;"><span class="bold">3.</span> Fudd, Elmer</td>
                    <td class="lightGray" style="width: 150px;">$800.00</td>
                    <td class="lightGray" style="width: 350px;">Stack, Robert</td>
                </tr>
                <tr>
                    <td style="width: 250px;"><span class="bold">4.</span> Bunny, Bugs</td>
                    <td style="width: 150px;">$1500.00</td>
                    <td style="width: 350px;">&nbsp;</td>
                </tr>
            </table>
        </section>
    </body>
</document>