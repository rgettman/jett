<document>
    <properties>
        <author email="rgettman@users.sourceforge.net">Randy Gettman</author>
        <title>Change Log for JETT</title>
    </properties>
    <body>
        <section name="JETT 0.9.0 (Beta) Released - 19 Dec 2014">
            <p>New In JETT 0.9.0:</p>
            <ul>
                <li>Ticket #35: Include more detail on original cell locations on
                    <code>TagParseExceptions</code>.  Now, <code>TagParseException</code> messages
                    include not just the location of the cell where the tag was encountered, but
                    also the original template location as well.  Also included are the locations
                    of all tags the error tag was nested inside of, to promote the ease of locating
                    a tag error on a template spreadsheet.</li>
                <li>Ticket #36: The <code>CommentTag</code> threw a <code>NullPointerException</code>
                    when a <code>null</code> author was supplied.  This tag class now uses
                    <code>Attributetil</code> to parse and evaluate its attribute values, which
                    throws the proper exception if a <code>null</code> is passed for the
                    "author" or the "comment" attributes.</li>
                <li>Ticket #38: NULLs from the database aren't respected when retrieved with JDBC
                    Execution.  Now, JETT checks the database value for <code>null</code> using
                    <code>wasNull()</code>, so the proper <code>null</code> is stored in
                    <code>ResultSetRow</code>, JETT's class to store DB results for processing.</li>
                <li>Ticket #40: The <code>ExpressionFactory</code> internal class was a singleton,
                    but because it represents the interface to Apache Commons JEXL, it becomes a
                    bottleneck when reports are being generated concurrently.  Now, the
                    <code>ExpressionFactory</code> is no longer a singleton; a new factory is now
                    owned by each new <code>ExcelTransformer</code> created, eliminating the
                    bottleneck.</li>
                <li>Ticket #41: A second newline character in a query string to be executed by the
                    <code>JDBCExecutor</code> causes an error.  A previous bug fix had exposed this
                    bug, which had only replaced the first newline character it encountered.  Now,
                    JETT will replace all newline characters it encounters with spaces.</li>
                <li>Ticket #42: Create an "ana" tag to utilize new jAgg 0.9.0 Analytics
                    functionality.  The new <a href="tags/ana.html">Ana tag</a> now provides
                    analytic function capability.  JETT's dependency on jAgg has been updated to
                    require jAgg 0.9.0.</li>
            </ul>
        </section>
        <section name="JETT 0.8.0 (Beta) Released - 31 Jul 2014">
            <p>New in JETT 0.8.0:</p>
            <ul>
                <li>Ticket #21: Add more listener hooks to JETT execution.  JETT already had
                    listeners for after cells were processed, after tags were processed, and after
                    a loop iteration of a looping tag was processed.  Now, <code>CellListener</code>,
                    <code>TagListener</code>, and <code>TagLoopListener</code> each have new
                    "before" methods that will execute.  Additionally, there is the new
                    <code>SheetListener</code> interface, with both "before" and "after" methods,
                    that triggers before and after a <code>Sheet</code> is transformed.  Each
                    "before" method returns a <code>boolean</code> that controls whether the
                    relevant processing should continue.</li>
                <li>Ticket #22: Performance issues were reported after JETT 0.7.0 changed
                    <code>AttributeUtil</code> into <code>AttributeEvaluator</code> so that it
                    could carry the state necessary to report on which cell errors were found.
                    It has been changed back to <code>AttributeUtil</code>, with each static
                    utility method taking a <code>TagContext</code> as a parameter to supply the
                    necessary cell information.</li>
                <li>Ticket #23: There was a <code>FormulaParser</code> error when a JETT formula
                    contained a ranged cell reference such as "A10:A11".  The <code>FormulaParser</code>
                    now recognizes the ":" character, so that each cell reference can be resolved
                    correctly.</li>
                <li>Ticket #25: JDBC Execution in a "forEach" tag with a "groupBy" attribute
                    results in an <code>UnsupportedOperationException</code>.  JDBC Execution in
                    JETT relies on a <code>get(String)</code> method existing and being invoked in
                    an expression context.  However, JETT utilizes
                    <a href="http://jagg.sourceforge.net">jAgg</a> for the processing of the
                    "groupBy" attribute, which didn't recognize or search for <code>get(String)</code>
                    methods in a bean if the normal <code>getProperty()</code> method wasn't found.
                    JETT is now upgraded to use jAgg 0.8.1, which supplies this missing
                    functionality.</li>
                <li>Ticket #26: Allow expressions to be escaped so that they aren't evaluated.
                    JETT now allows the "$" character to be escaped, such that <code>\${expression}</code>
                    won't be evaluated.  An unrelated bug was found and fixed when implementing the
                    changes for this ticket.  If rich text formatting was applied to a cell that
                    contained identical expressions, then the formatting was messed up due to the
                    fact that all of the expressions were replaced at once, but the formatting was
                    applied only once.  Now, all expressions are replaced individually, resulting
                    in rich text formatting being applied correctly.</li>
                <li>Ticket #29: JETT has slow performance when transforming sheets with lots of
                    merged regions.  When there are a large number of merged regions in a sheet,
                    JETT, which relies on Apache POI for its access to the sheet's merged regions,
                    suffered large performance penalties.  This occurred when attempting to process
                    large numbers of merged regions on .xlsx workbooks.  As a workaround, JETT now
                    caches the merged regions present on the template sheet.  It manipulates those
                    merged regions only in its own cache, and it applies them back to the sheet
                    after it has been transformed.  This results in a big performance boost.</li>
                <li>Ticket #31: Add option to recalculate all formulas.  JETT now has the options
                    to evaluate all formulas once transformation is done, with a new method in
                    <code>ExcelTransformer</code>: <code>setEvaluateFormulas</code>.  It also can
                    control a flag in the workbook itself to force recalculation of formulas when
                    Excel opens the workbook, with another new method in
                    <code>ExcelTransformer</code>: <code>setForceRecalculationOnOpening</code>.</li>
                <li>Bug fix (Ticket #32): <a href="collections/implicit.html">Implicit Collections
                    Processing</a> breaks when a numeric cell is in the block of cells to be
                    processed.  JETT had assumed that the cells in the block all had text, so
                    Apache POI threw an exception when a numeric cell was found.  This occurs when
                    JETT is searching for collection expressions to be processed in "implicit
                    collections processing".  Now, JETT ignores numeric cells for this purpose.
                    Also, the calculation of the leftmost and rightmost extent of the block was
                    wrong when exactly one of the metadata keys "right" and "left" was specified.
                    This has been fixed also.</li>
                <li>Ticket #33: Update JETT formulas when the sheet name changes, either due to
                    sheet cloning, sheet repositioning, or evaluating an expression located in the
                    sheet name.  JETT didn't update JETT formula cell references on any of these
                    events, resulting in possible incorrect cell references or JETT simply not
                    replacing JETT formulas with an Excel formula at all.  Now, JETT updates JETT
                    formula cell references on all these events.</li>
                <li>Ticket #34: Support the manipulation of existing named ranges.  Before now,
                    JETT completely ignored named ranges.  Now, if sheets are cloned, repositioned,
                    or renamed, any named ranges that were scoped to those sheets are re-scoped.
                    Also, the new <a href="tags/name.html">Name tag</a> in the standard library
                    lets the user supply a JETT formula to an existing named range, so that the
                    formula referred to by a named range can be changed dynamically during
                    transformation.  This allows a chart that refers to named ranges for its data
                    ranges to have its data changed dynamically, even if it's indirectly, by
                    updating the existing named ranges.</li>
            </ul>
        </section>
        <section name="JETT 0.7.0 (Beta) Released - 09 May 2014">
            <p>New in JETT 0.7.0:</p>
            <ul>
                <li>Bug fix (Ticket #9): JETT formulas weren't being copied to the right correctly
                    when the ForEachTag had "copyRight" set to "true".  The ForEachTag is now
                    properly copying formulas to the right when copyRight is set to "true".</li>
                <li>Bug fix (No ticket): Invalid formula reference replacement when reference is
                    found as a substring of another formula reference.  E.g. A formula reference of
                    "A2", when being mapped to something like "A22", was being substituted in a formula
                    reference of "A21" to become "A221".  Now JETT formulas will make sure that the
                    entire formula reference matches, not just a substring.</li>
                <li>Ticket #11: Support expressions in "groupBy" properties.  JETT is now upgraded
                    to use jAgg 0.8.0, which supports nested properties.  JETT uses jAgg to provide
                    aggregate expressions and grouping functionality.  It still won't support
                    full expressions such as <code>groupBy="created.year + ' ' + created.month"</code>,
                    but it will support nested properties such as <code>groupBy="created.year"</code>.</li>
                <li>Bug fix (Ticket #12): A JETT formula referencing cells outside a ForEachTag
                    resulted in a <code>NullPointerException</code>.  Previously, the code didn't
                    even consider this case.  JETT now handles this case properly, walking out of
                    the looping tag looking for references in its translation map.</li>
                <li>Ticket #14: When transforming a template sheet into multiple cloned sheets,
                    allow template sheets and the cloned sheets to be listed in any order, not just
                    consecutively.  E.g. template sheets can be specified as "A, B, A, B, A, B",
                    not just as "A, A, A, B, B, B".</li>
                <li>Bug fix (No ticket): When JETT clones a template sheet, the underlying Apache
                    POI library doesn't preserve all settings.  Specifically, some Print Setup
                    settings are not preseved. JETT now compensates by storing the template sheet's
                    settings and restoring them on the newly cloned sheet.</li>
                <li>Ticket #15: Make <code>ExcelTransformer</code>'s "createContext" method public,
                    which enables a caller to create and call a <code>SheetTransformer</code>
                    directly.  This has been done.</li>
                <li>Bug fix (Ticket #16): Attribute references to non-existent beans result in an
                    evaluation of <code>null</code>, causing a <code>NullPointerException</code> in
                    <code>AttributeUtil</code>.  <code>AttributeUtil</code> has been refactored
                    into <code>AttributeEvaluator</code>, and it now properly handles <code>null</code>
                    evaluations.  It also references the appropriate cell when throwing validation
                    exceptions.  Additional JUnit tests have been added for
                    <code>AttributeEvaluator</code>.</li>
                <li>Bug fix (Ticket #17): The "&lt;&gt;" Excel operator in a formula is being
                    interpreted as a tag, causing an error.  Now, JETT won't interpret "&lt;" as a
                    tag if it's followed by whitespace, a "&gt;", another "&lt;", or a "=".</li>
                <li>Ticket #20: Allow expressions to be evaluated in sheet names.  JETT now
                    evaluates expressions in sheet names, and also in the header and footer.</li>
                <li>From Discussion: Allow "\n" characters in attribute values, specifically in
                    queries contained in JDBC Executor expressions.  This is accomplished by
                    converting all carriage returns, line feeds, and tabs in attribute values to
                    space characters.  To support such special characters, escaping in attribute
                    values has been expanded to include all Java escape characters:
                    <code>\\ \' \" \b \f \n \r \t</code>.</li>
                <li>From Discussion: Avoid removing all cell contents when taking a "past end
                    action" when looping over multiple collections at once, and one when of the
                    collections has been exhausted.  JETT now supports a new "past end action",
                    <code>replaceExpr</code>, that indicates that any expression that references a
                    collection that is already exhausted will be replaced.  Other content in the
                    cell will not be affected.  The
                    <a href="tags/multiForEach.html">MultiForEach tag</a> now supports the
                    <code>replaceExpr</code> "past end action", along with a new attribute,
                    <code>replaceValue</code>, that specifies with what to replace these
                    expressions.  The replacement value defaults to an empty string.
                    Correspondingly,
                    <a href="collections/implicit.html">implicit collections processing</a> now
                    supports the same feature.</li>
            </ul>
        </section>
        <section name="JETT 0.6.0 (Beta) Released - 26 Nov 2013">
            <p>New in JETT 0.6.0:</p>
            <ul>
                <li><a href="misc/jdbc_executor.html">JDBC Template Execution is here!</a>
                    Create a <code>JDBCExecutor</code>, expose it
                    in the beans, and use it to execute SQL queries specified directly in the
                    template spreadsheet.  Straight "select" statements are supported, and "select"
                    statements with JDBC "?" values are supported as well.</li>
                <li>Two new
                    <a href="apidocs/net/sf/jett/transform/ExcelTransformer.html"><code>transform</code>
                    methods</a> are added.  These operate on an already created <code>Workbook</code>
                    object.  Also, the existing <code>transform</code> methods that take an input
                    filename as a parameter no longer create the <code>Workbook</code> with a
                    <code>FileInputStream</code>; they use a <code>File</code> instead,
                    <a href="http://poi.apache.org/spreadsheet/quick-guide.html#Files+vs+InputStreams">
                    to save memory</a>.</li>
                <li>Bug fix (Ticket #6): Unpaired double-quote in a cell value results in an
                    infinite loop in the <code>TagParser</code>.  This has been fixed.</li>
                <li>Bug fix (Ticket #7): <code>BigDecimals</code> are not supported.
                    <code>BigDecimals</code> and <code>BigIntegers</code> are now supported.  Their
                    values, when entered into a <code>Cell</code>, follow what Excel does when a
                    user enters large numbers.  If the number can be expressed as a normal
                    <code>double</code>, then the cell will contain a numeric value, else it will
                    be interpreted as a <code>String</code> value.</li>
            </ul>
        </section>
        <section name="JETT 0.5.2 (Beta) Released - 19 Jul 2013">
            <p>New in JETT 0.5.2:</p>
            <ul>
                <li>Bug fix (Ticket #5): JETT now allows the inclusion of double-quote character in
                    tag attribute values.  Normally a double-quote character delimits the beginning
                    and ending of an attribute value, but now JETT allows the escaping of the
                    double-quote character with a backslash: <code>\"</code> means a literal
                    <code>"</code>, e.g. <code>attr="\"Escape it!\", he said."</code>.  JETT also
                    allows the backslash character to escape itself: <code>\\</code> means a
                    literal <code>\</code>, e.g. <code>attr="C:\\Program Files\\Java\\"</code>.</li>
                <li>Bug fix (No ticket #): If Implicit Collections Processing is operating on a
                    collection, but a property elsewhere in an expression contained that collection
                    name as a substring (e.g. <code>${collection.collectionValue}</code>, then JETT
                    had a problem with it.  JETT now takes into account this case and processes it
                    correctly.</li>
                <li>Additional test cases have been added for the
                    <a href="tags/comment.html">comment tag</a> concerning the comment's Excel
                    visibility.</li>
            </ul>
        </section>
        <section name="JETT 0.5.1 (Beta) Released - 04 Mar 2013">
            <p>New in JETT 0.5.1:</p>
            <ul>
                <li>Bug fix: When using the <a href="tags/span.html">span tag</a>, sometimes the
                    background of the Cell was accidentally set to "gray50percent", even if there
                    was no background color, foreground color, or fill pattern.  This bug is now
                    fixed in 0.5.1.</li>
            </ul>
        </section>
        <section name="JETT 0.5.0 (Beta) Released - 21 Feb 2013">
            <p>New in JETT 0.5.0:</p>
            <ul>
                <li>The <a href="tags/style.html">style tag</a> has a new attribute: "class" for
                    assigning styles to a block of cells defined in a ".css" file, which is very
                    much like a CSS file in web design.</li>
                <li>If the <a href="tags/style.html">style tag</a> is used extensively, then JETT's
                    performance suffers.  Now, JETT maintains caches for styles and fonts used,
                    for easy, fast lookup and reuse.</li>
                <li>Additional test cases have been added to the JUnit test case that tests the
                    <a href="tags/hyperlink.html">hyperlink</a> tag.</li>
                <li>Bug fix: When cell borders were used in the same cell as a
                    <a href="tags/span.html">span tag</a>, the borders were not changed to match
                    the new merged region.  Now, the borders are changed to match the new merged
                    region.</li>
                <li>Bug fix: When an expression contains the method call "size()" on a collection,
                    JETT didn't properly recognize that the collection expression shouldn't be
                    processed with <a href="collections/implicit.html">implicit collections
                    processing</a>, i.e. one block for every collection item.  Now JETT properly
                    recognizes the "size()" method on a collection and doesn't perform implicit
                    collections processing in this case.</li>
            </ul>
        </section>
        <section name="JETT 0.4.0 (Beta) Released - 07 Dec 2012">
            <p>New in JETT 0.4.0:</p>
            <ul>
                <li>New tag: <a href="tags/style.html">"style"</a> to dynamically change the style
                on the Cells in the body of the tag, e.g.
                <code>&lt;jt:style style="font-weight: bold;font-height-in-points: 20"&gt;${expr}&lt;/jt:style&gt;</code>.</li>
                <li>New tag: <a href="tags/formula.html">"formula"</a> to dynamically create Excel
                formulas unaffected by JETT formula processing.</li>
                <li>New attributes on the <a href="tags/agg.html">"agg"</a> tag to support rollups,
                cubes, and grouping sets.</li>
                <li>New attribute on the <a href="tags/span.html">"span"</a> tag to make an
                adjustment to the size of a merged region, adding a number to the size.</li>
                <li>A new POI bean is exposed: "cell" that represents the <code>Cell</code> that
                contains the expression.</li>
                <li>One can now reference static Java methods in JEXL directly, e.g.
                <code>${java.lang.String.format("%d / %d", numerator, denominator)}</code></li>
                <li>New JETT functionality presented as registered functions, e.g.
                <code>${jett:cellRef(1, 2)} => "C2"</code>, and
                <code>${jett:cellRef(1, 2, 2, 2)} => "C2:D3"</code>.</li>
                <li>Bug fix: If an expression was repeated more than once, and is present with
                other expresssions in a Cell, then the value replacement wasn't working right.
                This is now fixed.</li>
                <li>Bug fix: Boolean values were being populated as the strings "true" and "false".
                Now they are properly populated as the Excel boolean values <code>TRUE</code> and
                <code>FALSE</code>.  Boolean expressions within strings will still yield "true"
                and "false".</li>
                <li>Lots of JUnit test cases have been added for all the new features.</li>
                <li>There is a new "readme.txt" file.</li>
            </ul>
        </section>
        <section name="JETT 0.3.0 (Beta) Released - 26 Sep 2012">
            <p>New in JETT 0.3.0:</p>
            <ul>
                <li><code>TagListeners</code> may now be created, which get called when any tag
                is finished processing.  All <code>Tags</code> that subclass <code>BaseTag</code>
                now support the <code>onProcessed</code> attribute for specifying
                <code>TagListeners</code>.</li>
                <li><code>TagLoopListeners</code> may now be created, which get called when every
                loop of a looping tag (<code>Tags</code> that subclass <code>BaseLoopTag</code>)
                is finished processing.  All <code>Tags</code> that subclass
                <code>BaseLoopTag</code> now support the <code>onLoopProcessed</code> attribute for
                specifying <code>TagLoopListeners</code>.</li>
                <li>There are 2 new attributes for <a href="tags/forEach.html">forEach</a> tags:</li>
                <ul>
                    <li><code>groupBy</code> supports separating the collection into separate
                    groups with identical properties for further processing.</li>
                    <li><code>orderBy</code> supports ordering the collection items before
                    displaying them.</li>
                </ul>
                <li>For <a href="collections/implicit.html">Implicit Collections Processing</a>,
                4 additional metadata keys are added:</li>
                <ul>
                    <li><code>indexVar</code> supports a zero-based looping variable name that
                    works just like the same-named attribute on the
                    <a href="tags/multiForEach.html">multiForEach</a> tag.</li>
                    <li><code>limit</code> supports a limit to the number of collection items
                    processed that works like the same-named attribute on the
                    <a href="tags/multiForEach.html">multiForEach</a> tag.</li>
                    <li><code>onProcessed</code> supports <code>TagListeners</code> just the same
                    as all <code>BaseTags</code> do.</li>
                    <li><code>onLoopProcessed</code> supports <code>TagLoopListeners</code> just
                    the same as all looping tags do.</li>
                </ul>
                <li>A bug was fixed in Formulas processing.  If a JETT formula is specified in
                the middle of a Cell's text, because tag text preceded it, JETT will no longer
                throw an uncaught Exception.</li>
                <li>Lots of JUnit test cases have been added for all the new features.</li>
                <li>This is the first JETT release to be submitted to the Sonatype OSS Maven
                Repository, which will make JETT available in the Maven Central Repository.</li>
            </ul>
        </section>
        <section name="JETT 0.2.0 (Beta) Released - 08 Aug 2012">
            <p>New in JETT 0.2.0:</p>
            <ul>
                <li>New tags: <a href="tags/comment.html">"comment"</a> to create Excel Comments on
                Cells, <a href="tags/group.html">"group"</a> to define Excel Groups (Outlines), and
                <a href="tags/hyperlink.html">"hyperlink"</a> to create Hyperlinks on Cells.</li>
                <li>It is now possible to create Excel Groups (Outlines) on dynamically placed data
                using <a href="tags/looping.html">looping tags</a> such as the
                <a href="tags/forEach.html">forEach tag</a>.  It is also possible to specify new
                metadata to create Excel Groups using <a href="collections/implicit.html">Implicit
                Collections Processing</a>.</li>
                <li>JETT has supported Rich Text using Expressions, but now it supports Rich Text
                inside certain appropriate tag attributes that are used as actual Cell contents.</li>
                <li>It is now possible to supply <a href="misc/jexl_settings.html">custom functions</a>
                into a custom JEXL namespace, which can result in such Expressions as
                <code>${custom:method(param)}</code>.</li>
                <li>Additional convenience "transform" methods in the <code>ExcelTransformer</code>
                class allow the developer to specify input and output filenames, and to let JETT
                handle the reading and writing of the Excel files.</li>
                <li>Lots of JUnit test cases have been added for all the new features, and for lots
                of old features that needed them.</li>
                <li>Two bugs are fixed relating to JETT Formulas.  One bug did not pick up the cell
                reference if it was at the end of the JETT Formula, and another bug did not allow
                negative default values to be supplied in a formula cell reference.  Both bugs are
                now fixed.</li>
            </ul>
        </section>
        <section name="JETT 0.1.0 (Beta) Released - 20 Jul 2012">
            <p>This is the initial release of JETT.</p>
        </section>
    </body>
</document>